{
  "comments": [
    {
      "key": {
        "uuid": "d4eafa50_8232a856",
        "filename": "apps/boot/card/src/com/android/verifiedboot/storage/BasicLock.java",
        "patchSetId": 2
      },
      "lineNbr": 252,
      "author": {
        "id": 1139038
      },
      "writtenOn": "2017-05-11T11:03:54Z",
      "side": 1,
      "message": "Why is this so strict? The intent of calling this is to make sure the lock is locked so isn\u0027t this just a noop instead?",
      "range": {
        "startLine": 252,
        "startChar": 11,
        "endLine": 252,
        "endChar": 52
      },
      "revId": "07c3cce6b829550fa58207138fd5f3ca8ce9bc3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f20b61c5_90086d82",
        "filename": "apps/boot/card/src/com/android/verifiedboot/storage/BasicLock.java",
        "patchSetId": 2
      },
      "lineNbr": 252,
      "author": {
        "id": 1022354
      },
      "writtenOn": "2017-05-11T22:09:53Z",
      "side": 1,
      "message": "Yeah it could be, but if there is metadata, then it will _not_ be updated.  So if you call it with new metadata and is says \"ok!\" then you may mistakenly assume the contents of meta have change -- re LOCK_OWNER.",
      "parentUuid": "d4eafa50_8232a856",
      "range": {
        "startLine": 252,
        "startChar": 11,
        "endLine": 252,
        "endChar": 52
      },
      "revId": "07c3cce6b829550fa58207138fd5f3ca8ce9bc3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5dae87b5_5dc61329",
        "filename": "apps/boot/card/src/com/android/verifiedboot/storage/BasicLock.java",
        "patchSetId": 2
      },
      "lineNbr": 252,
      "author": {
        "id": 1139038
      },
      "writtenOn": "2017-05-12T11:34:57Z",
      "side": 1,
      "message": "I was wondering if this would have an impact on the FW because setting a lock again will error which isn\u0027t a behaviour documented in the HAL. It might not be a big issue but I had always assumed settings something twice would be OK and don\u0027t know if I put that assumption in the code.",
      "parentUuid": "f20b61c5_90086d82",
      "range": {
        "startLine": 252,
        "startChar": 11,
        "endLine": 252,
        "endChar": 52
      },
      "revId": "07c3cce6b829550fa58207138fd5f3ca8ce9bc3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a5b3013_26003376",
        "filename": "apps/boot/card/src/com/android/verifiedboot/storage/BasicLock.java",
        "patchSetId": 2
      },
      "lineNbr": 252,
      "author": {
        "id": 1022354
      },
      "writtenOn": "2017-05-15T15:36:50Z",
      "side": 1,
      "message": "Why don\u0027t we just have esed check if the lock state matches the request?\n\nFor Carrier Unlock, this change doesn\u0027t apply, but for device lock, it won\u0027t re-lock.  Repeated unlocks will be fine though.\n\nI could make this compare if metadata is supplied, but that seems like something better done in userland. wdyt?",
      "parentUuid": "5dae87b5_5dc61329",
      "range": {
        "startLine": 252,
        "startChar": 11,
        "endLine": 252,
        "endChar": 52
      },
      "revId": "07c3cce6b829550fa58207138fd5f3ca8ce9bc3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "514edf8a_0a01e33b",
        "filename": "apps/boot/card/src/com/android/verifiedboot/storage/Storage.java",
        "patchSetId": 2
      },
      "lineNbr": 425,
      "author": {
        "id": 1139038
      },
      "writtenOn": "2017-05-11T11:03:54Z",
      "side": 1,
      "message": "Why not fail if transient array allocation fails (it shouldn\u0027t happen)? And why not just use the reserved buffer if you\u0027re going to have it anyway?",
      "range": {
        "startLine": 421,
        "startChar": 16,
        "endLine": 425,
        "endChar": 44
      },
      "revId": "07c3cce6b829550fa58207138fd5f3ca8ce9bc3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88494b12_9542c6b5",
        "filename": "apps/boot/card/src/com/android/verifiedboot/storage/Storage.java",
        "patchSetId": 2
      },
      "lineNbr": 425,
      "author": {
        "id": 1022354
      },
      "writtenOn": "2017-05-11T22:09:53Z",
      "side": 1,
      "message": "I was getting occasional failures depending on RAM avail.  However, I\u0027d like to avoid making it easy to write-and-rewrite flash from userland without adding a barrier, so I figure this would best effort switch to RAM.\n\nDo you know if, when cleared, the ref goes back to null?",
      "parentUuid": "514edf8a_0a01e33b",
      "range": {
        "startLine": 421,
        "startChar": 16,
        "endLine": 425,
        "endChar": 44
      },
      "revId": "07c3cce6b829550fa58207138fd5f3ca8ce9bc3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e8e4d60_fed0ac8a",
        "filename": "apps/boot/card/src/com/android/verifiedboot/storage/Storage.java",
        "patchSetId": 2
      },
      "lineNbr": 425,
      "author": {
        "id": 1139038
      },
      "writtenOn": "2017-05-12T11:34:57Z",
      "side": 1,
      "message": "The docs on CLEAR_ON_DESELECT say \"the contents of the transient object are cleared to the default value\" so the ref is still valid and, I assume, the memory is still allocated and is only deallocated when there are no more references to the array object.\n\nIn Weaver (CoreSlots.java), I allocated a static transient array in the constructor but I\u0027m not sure what the JC best practice is.\n\n[I thought we had plenty of RAM!]",
      "parentUuid": "88494b12_9542c6b5",
      "range": {
        "startLine": 421,
        "startChar": 16,
        "endLine": 425,
        "endChar": 44
      },
      "revId": "07c3cce6b829550fa58207138fd5f3ca8ce9bc3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c63f9e4_27d094c6",
        "filename": "apps/boot/card/src/com/android/verifiedboot/storage/Storage.java",
        "patchSetId": 2
      },
      "lineNbr": 425,
      "author": {
        "id": 1022354
      },
      "writtenOn": "2017-05-15T15:36:50Z",
      "side": 1,
      "message": "We have lots of RAM -- I think, I was triggering occasional failures by reallocating transient per-select ;) So it needed to GC the old space.\n\nI think I\u0027ll leave this since we can\u0027t tolerate an install/update failure as that time doesn\u0027t provide many choices for recovery with this specific applet (Weaver\u0027s reinstall could be run again).  Reserving the flash but never needing it isn\u0027t a huge deal and better to not flatten it if not.\n\nSeem like a reasonable tradeoff?",
      "parentUuid": "2e8e4d60_fed0ac8a",
      "range": {
        "startLine": 421,
        "startChar": 16,
        "endLine": 425,
        "endChar": 44
      },
      "revId": "07c3cce6b829550fa58207138fd5f3ca8ce9bc3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20fde997_615f9237",
        "filename": "apps/boot/card/src/com/android/verifiedboot/storage/Storage.java",
        "patchSetId": 2
      },
      "lineNbr": 508,
      "author": {
        "id": 1139038
      },
      "writtenOn": "2017-05-11T11:03:54Z",
      "side": 1,
      "message": "Just relying on this state might lead to problems, especially if there are errors which cause the meta data to be loaded but not consumed. Looks like p1 and p2 are already being used so maybe a new instruction to split the meta/no-meta locks?\n\nIt still requires locks with meta data to \"use it right\" but I\u0027m not sure what the potential cost of that might be.",
      "range": {
        "startLine": 508,
        "startChar": 16,
        "endLine": 508,
        "endChar": 30
      },
      "revId": "07c3cce6b829550fa58207138fd5f3ca8ce9bc3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8ced38c_8d5031a9",
        "filename": "apps/boot/card/src/com/android/verifiedboot/storage/Storage.java",
        "patchSetId": 2
      },
      "lineNbr": 508,
      "author": {
        "id": 1022354
      },
      "writtenOn": "2017-05-11T22:09:53Z",
      "side": 1,
      "message": "I can add a payload requirement for extra args now.  So set lock will have an additional value of (byte)useMetdata. If 0x01, the it consumes it here and if 0x00, it doesn\u0027t.\n\nI\u0027ll wire it up and see how it goes!",
      "parentUuid": "20fde997_615f9237",
      "range": {
        "startLine": 508,
        "startChar": 16,
        "endLine": 508,
        "endChar": 30
      },
      "revId": "07c3cce6b829550fa58207138fd5f3ca8ce9bc3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "890a969a_60b1cfff",
        "filename": "apps/boot/card/src/com/android/verifiedboot/storage/Storage.java",
        "patchSetId": 2
      },
      "lineNbr": 517,
      "author": {
        "id": 1022354
      },
      "writtenOn": "2017-05-11T22:09:53Z",
      "side": 1,
      "message": "Hrm this should probably be in a transaction with the set, but that seems like a big transaction.  Maybe on entry, it will move the length to a local variable and reset the length since we don\u0027t allow concurrency, there\u0027s no chance of a race there and if setWithMeta fails, then the metadata will be cleared anyway.\n\nwdyt?",
      "range": {
        "startLine": 517,
        "startChar": 16,
        "endLine": 517,
        "endChar": 38
      },
      "revId": "07c3cce6b829550fa58207138fd5f3ca8ce9bc3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f2ffccb_9cba7f3a",
        "filename": "apps/boot/card/src/com/android/verifiedboot/storage/Storage.java",
        "patchSetId": 2
      },
      "lineNbr": 517,
      "author": {
        "id": 1139038
      },
      "writtenOn": "2017-05-12T11:34:57Z",
      "side": 1,
      "message": "1. The transaction is to make sure the the lock value and metadata value update atomically, even if there is power loss.\n2. This applet doesn\u0027t have to worry about concurrency because it doesn\u0027t implement the MultiSelectable interface.\n\nIn the event of power loss causing this to fail, when the applet is next selected, metadataLength will be set to 0 again anyway so I\u0027m not sure it particularly matters.\n\nAnother case to think about is SW errors, e.g. an invalid lock, and the state the metadata should be left in if that occurs.",
      "parentUuid": "890a969a_60b1cfff",
      "range": {
        "startLine": 517,
        "startChar": 16,
        "endLine": 517,
        "endChar": 38
      },
      "revId": "07c3cce6b829550fa58207138fd5f3ca8ce9bc3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "596fd5ab_2143a804",
        "filename": "apps/boot/card/src/com/android/verifiedboot/storage/Storage.java",
        "patchSetId": 2
      },
      "lineNbr": 517,
      "author": {
        "id": 1022354
      },
      "writtenOn": "2017-05-15T15:36:50Z",
      "side": 1,
      "message": "I think consuming it even on errors is ok as the support library will always re-send the metadata.\n\nFor #1, I made a minor applet change too.",
      "parentUuid": "0f2ffccb_9cba7f3a",
      "range": {
        "startLine": 517,
        "startChar": 16,
        "endLine": 517,
        "endChar": 38
      },
      "revId": "07c3cce6b829550fa58207138fd5f3ca8ce9bc3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7920596_6f7be50b",
        "filename": "apps/boot/ese_boot_tool.cpp",
        "patchSetId": 2
      },
      "lineNbr": 272,
      "author": {
        "id": 1139038
      },
      "writtenOn": "2017-05-11T11:03:54Z",
      "side": 1,
      "message": "This seems quite big to put on the stack.\n\n+1 needed?",
      "range": {
        "startLine": 272,
        "startChar": 38,
        "endLine": 272,
        "endChar": 42
      },
      "revId": "07c3cce6b829550fa58207138fd5f3ca8ce9bc3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5850c09_30cb2290",
        "filename": "apps/boot/ese_boot_tool.cpp",
        "patchSetId": 2
      },
      "lineNbr": 272,
      "author": {
        "id": 1022354
      },
      "writtenOn": "2017-05-11T22:09:53Z",
      "side": 1,
      "message": "+1 for the lock value (braindead I know. I hate that API decision :( ... dunno what I was thinking.)\n\nI will move this to a heap allocation.",
      "parentUuid": "d7920596_6f7be50b",
      "range": {
        "startLine": 272,
        "startChar": 38,
        "endLine": 272,
        "endChar": 42
      },
      "revId": "07c3cce6b829550fa58207138fd5f3ca8ce9bc3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f68a6083_5da26efd",
        "filename": "apps/build.xml",
        "patchSetId": 2
      },
      "lineNbr": 145,
      "author": {
        "id": 1139038
      },
      "writtenOn": "2017-05-11T11:03:54Z",
      "side": 1,
      "message": "Does this need to update to reflect the version bump too?",
      "range": {
        "startLine": 145,
        "startChar": 16,
        "endLine": 145,
        "endChar": 46
      },
      "revId": "07c3cce6b829550fa58207138fd5f3ca8ce9bc3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "685673c1_5c0feb4b",
        "filename": "apps/build.xml",
        "patchSetId": 2
      },
      "lineNbr": 145,
      "author": {
        "id": 1022354
      },
      "writtenOn": "2017-05-11T22:09:53Z",
      "side": 1,
      "message": "Nope - this one is clobbering the pre-installed one.",
      "parentUuid": "f68a6083_5da26efd",
      "range": {
        "startLine": 145,
        "startChar": 16,
        "endLine": 145,
        "endChar": 46
      },
      "revId": "07c3cce6b829550fa58207138fd5f3ca8ce9bc3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "580ef706_59d3f654",
        "filename": "apps/build.xml",
        "patchSetId": 2
      },
      "lineNbr": 167,
      "author": {
        "id": 1139038
      },
      "writtenOn": "2017-05-11T11:03:54Z",
      "side": 1,
      "message": "Not for this CL, but it would be nice to use a property for the version so this doesn\u0027t get missed at some point in the future?",
      "range": {
        "startLine": 167,
        "startChar": 43,
        "endLine": 167,
        "endChar": 44
      },
      "revId": "07c3cce6b829550fa58207138fd5f3ca8ce9bc3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fba6d52_82c7cc04",
        "filename": "apps/build.xml",
        "patchSetId": 2
      },
      "lineNbr": 167,
      "author": {
        "id": 1022354
      },
      "writtenOn": "2017-05-11T22:09:53Z",
      "side": 1,
      "message": "I agree.",
      "parentUuid": "580ef706_59d3f654",
      "range": {
        "startLine": 167,
        "startChar": 43,
        "endLine": 167,
        "endChar": 44
      },
      "revId": "07c3cce6b829550fa58207138fd5f3ca8ce9bc3a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}